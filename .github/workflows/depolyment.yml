name: Deploy on EC2 (Blue-Green)

on:
  workflow_run:
    workflows: ["Deploy Infrastructure with Terraform"]
    types:
      - completed

permissions:           
  actions: read
  contents: read

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Blue-Green artifact
        uses: actions/download-artifact@v4
        with:
          name: bg-info
          path: .           

      - name: Determine target environment
        id: target
        run: |
          BLUE_IP=$(<blue_ip.txt)
          GREEN_IP=$(<green_ip.txt)
          ACTIVE=$(<active_env.txt)

          if [ "$ACTIVE" = "blue" ]; then
            echo "TARGET_ENV=green" >> $GITHUB_ENV
            echo "TARGET_IP=$GREEN_IP" >> $GITHUB_ENV
          else
            echo "TARGET_ENV=blue" >> $GITHUB_ENV
            echo "TARGET_IP=$BLUE_IP" >> $GITHUB_ENV
          fi

      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cravecart-frontend:${GITHUB_SHA} ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/cravecart-frontend:${GITHUB_SHA}

      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cravecart-backend:${GITHUB_SHA} ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/cravecart-backend:${GITHUB_SHA}

      - name: Deploy to inactive environment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.TARGET_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/CraveCart
            git pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/cravecart-backend:${GITHUB_SHA}
            docker pull ${{ secrets.DOCKER_USERNAME }}/cravecart-frontend:${GITHUB_SHA}
            docker compose down
            docker compose up -d

      - name: Switch traffic to new environment
        run: |
          cd Infrastructure
          terraform init
          terraform apply -auto-approve -var="active_env=${{ env.TARGET_ENV }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-north-1
