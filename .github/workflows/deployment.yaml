name: Deploy on EC2 (Blue-Green)

on:
  workflow_run:
    workflows: ["Deploy Infrastructure with Terraform"]
    types:
      - completed

permissions:
  actions: read
  contents: read

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      # Download PEM file and set as env var
      - name: Download PEM
        uses: actions/download-artifact@v4
        with:
          name: ec2-ssh-pem
          path: .
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Export PEM as env var
        run: |
          echo "PRIVATE_KEY<<EOF" >> $GITHUB_ENV
          cat CraveCartKey.pem >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          chmod 600 CraveCartKey.pem

      # Download Terraform outputs
      - name: Download Terraform outputs
        uses: actions/download-artifact@v4
        with:
          name: tf-outputs
          path: .
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Parse outputs
        id: outputs
        run: |
          BLUE_IP=$(jq -r .blue_ip.value tf-outputs.json)
          GREEN_IP=$(jq -r .green_ip.value tf-outputs.json)
          ACTIVE=$(jq -r .active_env.value tf-outputs.json)

          echo "BLUE_IP=$BLUE_IP" >> $GITHUB_ENV
          echo "GREEN_IP=$GREEN_IP" >> $GITHUB_ENV
          echo "ACTIVE=$ACTIVE" >> $GITHUB_ENV

      - name: Determine target environment
        run: |
          if [ "${{ env.ACTIVE }}" = "blue" ]; then
            echo "TARGET_ENV=green" >> $GITHUB_ENV
            echo "TARGET_IP=${{ env.GREEN_IP }}" >> $GITHUB_ENV
          else
            echo "TARGET_ENV=blue" >> $GITHUB_ENV
            echo "TARGET_IP=${{ env.BLUE_IP }}" >> $GITHUB_ENV
          fi

      - name: Deploy to inactive environment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.TARGET_IP }}
          username: ubuntu
          key: ${{ env.PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/CraveCart
            git pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/cravecart-backend:${GITHUB_SHA}
            docker pull ${{ secrets.DOCKER_USERNAME }}/cravecart-frontend:${GITHUB_SHA}
            docker compose down
            docker compose up -d
          debug: true

      - name: Switch traffic to new environment
        run: |
          cd Infrastructure
          terraform init -input=false
          terraform apply -auto-approve -var="active_env=${{ env.TARGET_ENV }}"