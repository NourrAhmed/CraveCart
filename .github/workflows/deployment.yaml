name: Deploy on EC2 (Blue-Green)

on:
  push:
    branches:
      - main

permissions:
  actions: read
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

     
      - name: Fetch Terraform outputs
        id: tf_outputs
        run: |
          curl \
            --header "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            "https://app.terraform.io/api/v2/organizations/CraveCart/workspaces/CraveCart/current-state-version?include=outputs" \
            -o state.json

          BLUE_IP=$(jq -r '.included[] | select(.attributes.name=="blue_ip") | .attributes.value' state.json)
          GREEN_IP=$(jq -r '.included[] | select(.attributes.name=="green_ip") | .attributes.value' state.json)
          ACTIVE=$(jq -r '.included[] | select(.attributes.name=="active_env") | .attributes.value' state.json)
          PEM=$(jq -r '.included[] | select(.attributes.name=="pemFile") | .attributes.value' state.json)

          echo "BLUE_IP=$BLUE_IP" >> $GITHUB_ENV
          echo "GREEN_IP=$GREEN_IP" >> $GITHUB_ENV
          echo "ACTIVE=$ACTIVE" >> $GITHUB_ENV

          echo "$PEM" > CraveCartKey.pem
          chmod 600 CraveCartKey.pem

      - name: Determine target environment
        run: |
          if [ "${{ env.ACTIVE }}" = "blue" ]; then
            echo "TARGET_ENV=green" >> $GITHUB_ENV
            echo "TARGET_IP=${{ env.GREEN_IP }}" >> $GITHUB_ENV
          else
            echo "TARGET_ENV=blue" >> $GITHUB_ENV
            echo "TARGET_IP=${{ env.BLUE_IP }}" >> $GITHUB_ENV
          fi

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Create inventory file
        run: |
          echo "[target]" > ansible/inventory.ini
          echo "${{ env.TARGET_IP }} ansible_user=ubuntu ansible_ssh_private_key_file=CraveCartKey.pem" >> ansible/inventory.ini

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          ansible-playbook -i ansible/inventory.ini ansible/playbooks/deploy.yaml \
            --extra-vars "commit_sha=${GITHUB_SHA} docker_user=${{ secrets.DOCKER_USERNAME }}"

      - name: Switch Traffic in Terraform Cloud
        run: |
          curl -s \
            --header "Authorization: Bearer $TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            https://app.terraform.io/api/v2/workspaces/<ORG>/<WORKSPACE>/vars \
          | jq -r '.data[] | select(.attributes.key=="active_env") | .id' \
          | xargs -I VAR_ID curl -s \
              --request PATCH \
              --header "Authorization: Bearer $TF_API_TOKEN" \
              --header "Content-Type: application/vnd.api+json" \
              --data '{"data":{"id":"VAR_ID","type":"vars","attributes":{"value":"green","hcl":false,"sensitive":false}}}' \
              https://app.terraform.io/api/v2/workspaces/<ORG>/<WORKSPACE>/vars/VAR_ID

